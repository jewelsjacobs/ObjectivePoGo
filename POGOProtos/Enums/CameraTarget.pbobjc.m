// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Enums/CameraTarget.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "CameraTarget.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - CameraTargetRoot

@implementation CameraTargetRoot

@end

#pragma mark - Enum CameraTarget

GPBEnumDescriptor *CameraTarget_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "CamTargetAttacker\000CamTargetAttackerEdge\000"
        "CamTargetAttackerGround\000CamTargetDefende"
        "r\000CamTargetDefenderEdge\000CamTargetDefende"
        "rGround\000CamTargetAttackerDefender\000CamTar"
        "getAttackerDefenderEdge\000CamTargetDefende"
        "rAttacker\000CamTargetDefenderAttackerEdge\000"
        "CamTargetAttackerDefenderMirror\000CamTarge"
        "tShoulderAttackerDefender\000CamTargetShoul"
        "derAttackerDefenderMirror\000CamTargetAttac"
        "kerDefenderWorld\000";
    static const int32_t values[] = {
        CameraTarget_CamTargetAttacker,
        CameraTarget_CamTargetAttackerEdge,
        CameraTarget_CamTargetAttackerGround,
        CameraTarget_CamTargetDefender,
        CameraTarget_CamTargetDefenderEdge,
        CameraTarget_CamTargetDefenderGround,
        CameraTarget_CamTargetAttackerDefender,
        CameraTarget_CamTargetAttackerDefenderEdge,
        CameraTarget_CamTargetDefenderAttacker,
        CameraTarget_CamTargetDefenderAttackerEdge,
        CameraTarget_CamTargetAttackerDefenderMirror,
        CameraTarget_CamTargetShoulderAttackerDefender,
        CameraTarget_CamTargetShoulderAttackerDefenderMirror,
        CameraTarget_CamTargetAttackerDefenderWorld,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(CameraTarget)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:CameraTarget_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL CameraTarget_IsValidValue(int32_t value__) {
  switch (value__) {
    case CameraTarget_CamTargetAttacker:
    case CameraTarget_CamTargetAttackerEdge:
    case CameraTarget_CamTargetAttackerGround:
    case CameraTarget_CamTargetDefender:
    case CameraTarget_CamTargetDefenderEdge:
    case CameraTarget_CamTargetDefenderGround:
    case CameraTarget_CamTargetAttackerDefender:
    case CameraTarget_CamTargetAttackerDefenderEdge:
    case CameraTarget_CamTargetDefenderAttacker:
    case CameraTarget_CamTargetDefenderAttackerEdge:
    case CameraTarget_CamTargetAttackerDefenderMirror:
    case CameraTarget_CamTargetShoulderAttackerDefender:
    case CameraTarget_CamTargetShoulderAttackerDefenderMirror:
    case CameraTarget_CamTargetAttackerDefenderWorld:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
