// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/ItemSettings.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BattleAttributes;
@class EggIncubatorAttributes;
@class ExperienceBoostAttributes;
@class FoodAttributes;
@class FortModifierAttributes;
@class IncenseAttributes;
@class InventoryUpgradeAttributes;
@class PokeballAttributes;
@class PotionAttributes;
@class ReviveAttributes;
GPB_ENUM_FWD_DECLARE(ItemCategory);
GPB_ENUM_FWD_DECLARE(ItemId);
GPB_ENUM_FWD_DECLARE(ItemType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ItemSettingsRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface ItemSettingsRoot : GPBRootObject
@end

#pragma mark - ItemSettings

typedef GPB_ENUM(ItemSettings_FieldNumber) {
  ItemSettings_FieldNumber_ItemId = 1,
  ItemSettings_FieldNumber_ItemType = 2,
  ItemSettings_FieldNumber_Category = 3,
  ItemSettings_FieldNumber_DropFreq = 4,
  ItemSettings_FieldNumber_DropTrainerLevel = 5,
  ItemSettings_FieldNumber_Pokeball = 6,
  ItemSettings_FieldNumber_Potion = 7,
  ItemSettings_FieldNumber_Revive = 8,
  ItemSettings_FieldNumber_Battle = 9,
  ItemSettings_FieldNumber_Food = 10,
  ItemSettings_FieldNumber_InventoryUpgrade = 11,
  ItemSettings_FieldNumber_XpBoost = 12,
  ItemSettings_FieldNumber_Incense = 13,
  ItemSettings_FieldNumber_EggIncubator = 14,
  ItemSettings_FieldNumber_FortModifier = 15,
};

@interface ItemSettings : GPBMessage

@property(nonatomic, readwrite) enum ItemId itemId;

@property(nonatomic, readwrite) enum ItemType itemType;

@property(nonatomic, readwrite) enum ItemCategory category;

@property(nonatomic, readwrite) float dropFreq;

@property(nonatomic, readwrite) int32_t dropTrainerLevel;

@property(nonatomic, readwrite, strong, null_resettable) PokeballAttributes *pokeball;
/// Test to see if @c pokeball has been set.
@property(nonatomic, readwrite) BOOL hasPokeball;

@property(nonatomic, readwrite, strong, null_resettable) PotionAttributes *potion;
/// Test to see if @c potion has been set.
@property(nonatomic, readwrite) BOOL hasPotion;

@property(nonatomic, readwrite, strong, null_resettable) ReviveAttributes *revive;
/// Test to see if @c revive has been set.
@property(nonatomic, readwrite) BOOL hasRevive;

@property(nonatomic, readwrite, strong, null_resettable) BattleAttributes *battle;
/// Test to see if @c battle has been set.
@property(nonatomic, readwrite) BOOL hasBattle;

@property(nonatomic, readwrite, strong, null_resettable) FoodAttributes *food;
/// Test to see if @c food has been set.
@property(nonatomic, readwrite) BOOL hasFood;

@property(nonatomic, readwrite, strong, null_resettable) InventoryUpgradeAttributes *inventoryUpgrade;
/// Test to see if @c inventoryUpgrade has been set.
@property(nonatomic, readwrite) BOOL hasInventoryUpgrade;

@property(nonatomic, readwrite, strong, null_resettable) ExperienceBoostAttributes *xpBoost;
/// Test to see if @c xpBoost has been set.
@property(nonatomic, readwrite) BOOL hasXpBoost;

@property(nonatomic, readwrite, strong, null_resettable) IncenseAttributes *incense;
/// Test to see if @c incense has been set.
@property(nonatomic, readwrite) BOOL hasIncense;

@property(nonatomic, readwrite, strong, null_resettable) EggIncubatorAttributes *eggIncubator;
/// Test to see if @c eggIncubator has been set.
@property(nonatomic, readwrite) BOOL hasEggIncubator;

@property(nonatomic, readwrite, strong, null_resettable) FortModifierAttributes *fortModifier;
/// Test to see if @c fortModifier has been set.
@property(nonatomic, readwrite) BOOL hasFortModifier;

@end

/// Fetches the raw value of a @c ItemSettings's @c itemId property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ItemSettings_ItemId_RawValue(ItemSettings *message);
/// Sets the raw value of an @c ItemSettings's @c itemId property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetItemSettings_ItemId_RawValue(ItemSettings *message, int32_t value);

/// Fetches the raw value of a @c ItemSettings's @c itemType property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ItemSettings_ItemType_RawValue(ItemSettings *message);
/// Sets the raw value of an @c ItemSettings's @c itemType property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetItemSettings_ItemType_RawValue(ItemSettings *message, int32_t value);

/// Fetches the raw value of a @c ItemSettings's @c category property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ItemSettings_Category_RawValue(ItemSettings *message);
/// Sets the raw value of an @c ItemSettings's @c category property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetItemSettings_Category_RawValue(ItemSettings *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
