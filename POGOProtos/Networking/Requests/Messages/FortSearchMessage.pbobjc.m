// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/FortSearchMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "FortSearchMessage.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - FortSearchMessageRoot

@implementation FortSearchMessageRoot

@end

#pragma mark - FortSearchMessageRoot_FileDescriptor

static GPBFileDescriptor *FortSearchMessageRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Networking.Requests.Messages"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - FortSearchMessage

@implementation FortSearchMessage

@dynamic fortId;
@dynamic playerLatitude;
@dynamic playerLongitude;
@dynamic fortLatitude;
@dynamic fortLongitude;

typedef struct FortSearchMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *fortId;
  double playerLatitude;
  double playerLongitude;
  double fortLatitude;
  double fortLongitude;
} FortSearchMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fortId",
        .dataTypeSpecific.className = NULL,
        .number = FortSearchMessage_FieldNumber_FortId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FortSearchMessage__storage_, fortId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "playerLatitude",
        .dataTypeSpecific.className = NULL,
        .number = FortSearchMessage_FieldNumber_PlayerLatitude,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(FortSearchMessage__storage_, playerLatitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "playerLongitude",
        .dataTypeSpecific.className = NULL,
        .number = FortSearchMessage_FieldNumber_PlayerLongitude,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(FortSearchMessage__storage_, playerLongitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "fortLatitude",
        .dataTypeSpecific.className = NULL,
        .number = FortSearchMessage_FieldNumber_FortLatitude,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(FortSearchMessage__storage_, fortLatitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "fortLongitude",
        .dataTypeSpecific.className = NULL,
        .number = FortSearchMessage_FieldNumber_FortLongitude,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(FortSearchMessage__storage_, fortLongitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FortSearchMessage class]
                                     rootClass:[FortSearchMessageRoot class]
                                          file:FortSearchMessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FortSearchMessage__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
