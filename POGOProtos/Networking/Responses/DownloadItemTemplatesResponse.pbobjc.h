// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BadgeSettings;
@class CameraSettings;
@class DownloadItemTemplatesResponse_ItemTemplate;
@class EncounterSettings;
@class EquippedBadgeSettings;
@class GymBattleSettings;
@class GymLevelSettings;
@class IapItemDisplay;
@class IapSettings;
@class ItemSettings;
@class MoveSequenceSettings;
@class MoveSettings;
@class PlayerLevelSettings;
@class PokemonSettings;
@class PokemonUpgradeSettings;
@class TypeEffectiveSettings;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DownloadItemTemplatesResponseRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface DownloadItemTemplatesResponseRoot : GPBRootObject
@end

#pragma mark - DownloadItemTemplatesResponse

typedef GPB_ENUM(DownloadItemTemplatesResponse_FieldNumber) {
  DownloadItemTemplatesResponse_FieldNumber_Success = 1,
  DownloadItemTemplatesResponse_FieldNumber_ItemTemplatesArray = 2,
  DownloadItemTemplatesResponse_FieldNumber_TimestampMs = 3,
};

@interface DownloadItemTemplatesResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DownloadItemTemplatesResponse_ItemTemplate*> *itemTemplatesArray;
/// The number of items in @c itemTemplatesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger itemTemplatesArray_Count;

@property(nonatomic, readwrite) uint64_t timestampMs;

@end

#pragma mark - DownloadItemTemplatesResponse_ItemTemplate

typedef GPB_ENUM(DownloadItemTemplatesResponse_ItemTemplate_FieldNumber) {
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_TemplateId = 1,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PokemonSettings = 2,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_ItemSettings = 3,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_MoveSettings = 4,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_MoveSequenceSettings = 5,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_TypeEffective = 8,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_BadgeSettings = 10,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_Camera = 11,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PlayerLevel = 12,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_GymLevel = 13,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_BattleSettings = 14,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_EncounterSettings = 15,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_IapItemDisplay = 16,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_IapSettings = 17,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PokemonUpgrades = 18,
  DownloadItemTemplatesResponse_ItemTemplate_FieldNumber_EquippedBadges = 19,
};

@interface DownloadItemTemplatesResponse_ItemTemplate : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *templateId;

@property(nonatomic, readwrite, strong, null_resettable) PokemonSettings *pokemonSettings;
/// Test to see if @c pokemonSettings has been set.
@property(nonatomic, readwrite) BOOL hasPokemonSettings;

@property(nonatomic, readwrite, strong, null_resettable) ItemSettings *itemSettings;
/// Test to see if @c itemSettings has been set.
@property(nonatomic, readwrite) BOOL hasItemSettings;

@property(nonatomic, readwrite, strong, null_resettable) MoveSettings *moveSettings;
/// Test to see if @c moveSettings has been set.
@property(nonatomic, readwrite) BOOL hasMoveSettings;

@property(nonatomic, readwrite, strong, null_resettable) MoveSequenceSettings *moveSequenceSettings;
/// Test to see if @c moveSequenceSettings has been set.
@property(nonatomic, readwrite) BOOL hasMoveSequenceSettings;

@property(nonatomic, readwrite, strong, null_resettable) TypeEffectiveSettings *typeEffective;
/// Test to see if @c typeEffective has been set.
@property(nonatomic, readwrite) BOOL hasTypeEffective;

@property(nonatomic, readwrite, strong, null_resettable) BadgeSettings *badgeSettings;
/// Test to see if @c badgeSettings has been set.
@property(nonatomic, readwrite) BOOL hasBadgeSettings;

@property(nonatomic, readwrite, strong, null_resettable) CameraSettings *camera;
/// Test to see if @c camera has been set.
@property(nonatomic, readwrite) BOOL hasCamera;

@property(nonatomic, readwrite, strong, null_resettable) PlayerLevelSettings *playerLevel;
/// Test to see if @c playerLevel has been set.
@property(nonatomic, readwrite) BOOL hasPlayerLevel;

@property(nonatomic, readwrite, strong, null_resettable) GymLevelSettings *gymLevel;
/// Test to see if @c gymLevel has been set.
@property(nonatomic, readwrite) BOOL hasGymLevel;

@property(nonatomic, readwrite, strong, null_resettable) GymBattleSettings *battleSettings;
/// Test to see if @c battleSettings has been set.
@property(nonatomic, readwrite) BOOL hasBattleSettings;

@property(nonatomic, readwrite, strong, null_resettable) EncounterSettings *encounterSettings;
/// Test to see if @c encounterSettings has been set.
@property(nonatomic, readwrite) BOOL hasEncounterSettings;

@property(nonatomic, readwrite, strong, null_resettable) IapItemDisplay *iapItemDisplay;
/// Test to see if @c iapItemDisplay has been set.
@property(nonatomic, readwrite) BOOL hasIapItemDisplay;

@property(nonatomic, readwrite, strong, null_resettable) IapSettings *iapSettings;
/// Test to see if @c iapSettings has been set.
@property(nonatomic, readwrite) BOOL hasIapSettings;

@property(nonatomic, readwrite, strong, null_resettable) PokemonUpgradeSettings *pokemonUpgrades;
/// Test to see if @c pokemonUpgrades has been set.
@property(nonatomic, readwrite) BOOL hasPokemonUpgrades;

@property(nonatomic, readwrite, strong, null_resettable) EquippedBadgeSettings *equippedBadges;
/// Test to see if @c equippedBadges has been set.
@property(nonatomic, readwrite) BOOL hasEquippedBadges;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
