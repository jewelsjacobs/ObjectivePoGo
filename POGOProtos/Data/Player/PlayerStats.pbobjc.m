// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Player/PlayerStats.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "PlayerStats.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PlayerStatsRoot

@implementation PlayerStatsRoot

@end

#pragma mark - PlayerStatsRoot_FileDescriptor

static GPBFileDescriptor *PlayerStatsRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Data.Player"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - PlayerStats

@implementation PlayerStats

@dynamic level;
@dynamic experience;
@dynamic prevLevelXp;
@dynamic nextLevelXp;
@dynamic kmWalked;
@dynamic pokemonsEncountered;
@dynamic uniquePokedexEntries;
@dynamic pokemonsCaptured;
@dynamic evolutions;
@dynamic pokeStopVisits;
@dynamic pokeballsThrown;
@dynamic eggsHatched;
@dynamic bigMagikarpCaught;
@dynamic battleAttackWon;
@dynamic battleAttackTotal;
@dynamic battleDefendedWon;
@dynamic battleTrainingWon;
@dynamic battleTrainingTotal;
@dynamic prestigeRaisedTotal;
@dynamic prestigeDroppedTotal;
@dynamic pokemonDeployed;
@dynamic pokemonCaughtByType;
@dynamic smallRattataCaught;

typedef struct PlayerStats__storage_ {
  uint32_t _has_storage_[1];
  int32_t level;
  float kmWalked;
  int32_t pokemonsEncountered;
  int32_t uniquePokedexEntries;
  int32_t pokemonsCaptured;
  int32_t evolutions;
  int32_t pokeStopVisits;
  int32_t pokeballsThrown;
  int32_t eggsHatched;
  int32_t bigMagikarpCaught;
  int32_t battleAttackWon;
  int32_t battleAttackTotal;
  int32_t battleDefendedWon;
  int32_t battleTrainingWon;
  int32_t battleTrainingTotal;
  int32_t prestigeRaisedTotal;
  int32_t prestigeDroppedTotal;
  int32_t pokemonDeployed;
  int32_t smallRattataCaught;
  NSData *pokemonCaughtByType;
  int64_t experience;
  int64_t prevLevelXp;
  int64_t nextLevelXp;
} PlayerStats__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_Level,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "experience",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_Experience,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, experience),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "prevLevelXp",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PrevLevelXp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, prevLevelXp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "nextLevelXp",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_NextLevelXp,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, nextLevelXp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "kmWalked",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_KmWalked,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, kmWalked),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "pokemonsEncountered",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PokemonsEncountered,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, pokemonsEncountered),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "uniquePokedexEntries",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_UniquePokedexEntries,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, uniquePokedexEntries),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pokemonsCaptured",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PokemonsCaptured,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, pokemonsCaptured),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "evolutions",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_Evolutions,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, evolutions),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pokeStopVisits",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PokeStopVisits,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, pokeStopVisits),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pokeballsThrown",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PokeballsThrown,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, pokeballsThrown),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "eggsHatched",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_EggsHatched,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, eggsHatched),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "bigMagikarpCaught",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_BigMagikarpCaught,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, bigMagikarpCaught),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "battleAttackWon",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_BattleAttackWon,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, battleAttackWon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "battleAttackTotal",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_BattleAttackTotal,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, battleAttackTotal),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "battleDefendedWon",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_BattleDefendedWon,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, battleDefendedWon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "battleTrainingWon",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_BattleTrainingWon,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, battleTrainingWon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "battleTrainingTotal",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_BattleTrainingTotal,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, battleTrainingTotal),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "prestigeRaisedTotal",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PrestigeRaisedTotal,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, prestigeRaisedTotal),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "prestigeDroppedTotal",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PrestigeDroppedTotal,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, prestigeDroppedTotal),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pokemonDeployed",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PokemonDeployed,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, pokemonDeployed),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pokemonCaughtByType",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_PokemonCaughtByType,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, pokemonCaughtByType),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "smallRattataCaught",
        .dataTypeSpecific.className = NULL,
        .number = PlayerStats_FieldNumber_SmallRattataCaught,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(PlayerStats__storage_, smallRattataCaught),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PlayerStats class]
                                     rootClass:[PlayerStatsRoot class]
                                          file:PlayerStatsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PlayerStats__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
